     1                                  bits 32 ; assembling for the 32 bits architecture
     2                                  
     3                                  ; declare the EntryPoint (a label defining the very first instruction of the program)
     4                                  global start        
     5                                  
     6                                  ; declare external functions needed by our program
     7                                  extern exit               ; tell nasm that exit exists even if we won't be defining it
     8                                  import exit msvcrt.dll    ; exit is a function that ends the calling process. It is defined in msvcrt.dll
     9                                                            ; msvcrt.dll contains exit, printf and all the other important C-runtime specific functions
    10                                  
    11                                  ; our data is declared here (the variables needed by our program)
    12                                  segment data use32 class=data
    13                                      ; d+[(a+b)*5-(c+c)*5]
    14 00000000 02                          a DB 2
    15 00000001 03                          b DB 3
    16 00000002 01                          c DB 1
    17 00000003 0500                        d DW 5
    18                                  
    19                                  ; our code starts here
    20                                  segment code use32 class=code
    21                                      start:
    22                                          ; ...
    23 00000000 A0[00000000]                MOV AL,[a] ; AL=02h
    24 00000005 0205[01000000]              ADD AL,[b] ; AL=05h
    25 0000000B B205                        MOV DL,5 ; DL=05h
    26 0000000D F6E2                        MUL DL ; AX=AL*DL=05h*05h=0019h
    27 0000000F 6689C2                      MOV DX,AX ; DX=AX=0019h=(a+b)*5
    28 00000012 A0[02000000]                MOV AL,[c] ; AL=01h
    29 00000017 0205[02000000]              ADD AL,[c] ; AL=02h
    30 0000001D B305                        MOV BL,5 ; BL=05h
    31 0000001F F6E3                        MUL BL ; AX=AL*BL=02h*05h=000Ah=(c+c)*5
    32 00000021 6629C2                      SUB DX,AX ; DX=0019h-000Ah=000Fh=[(a+b)*5-(c+c)*5]
    33 00000024 66A1[03000000]              MOV AX,[d] ; AX=0005h
    34 0000002A 6601D0                      ADD AX,DX ; AX=0005h+000Fh=0014h=d+[(a+b)*5-(c+c)*5]
    35                                      
    36                                          ; exit(0)
    37 0000002D 6A00                            push    dword 0      ; push the parameter for exit onto the stack
    38 0000002F FF15[00000000]                  call    [exit]       ; call exit to terminate the program
